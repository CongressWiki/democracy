Description: This template deploys a VPC, with a pair of public and private subnets spread across two Availabilty Zones. It deploys an Internet Gateway, with a default route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), and default routes for them in the private subnets. It then deploys a highly available ECS cluster using an AutoScaling Group, with ECS hosts distributed across multiple Availability Zones. Finally, it deploys a pair of example ECS services from containers published in Amazon EC2 Container Registry (Amazon ECR).

Parameters:
  Environment:
    Type: String
    Default: test


Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/democracy-stack/aws/infrastructure/vpc.yml
      Parameters:
        EnvironmentName: !Ref Environment
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/democracy-stack/aws/infrastructure/security-groups.yml
      Parameters:
        EnvironmentName: !Ref Environment
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/democracy-stack/aws/infrastructure/load-balancers.yml
      Parameters:
        EnvironmentName: !Ref Environment
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  Certificates:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/democracy-stack/aws/infrastructure/certificates.yml
      Parameters:
        EnvironmentName: !Ref Environment
        LoadBalancerUrl: !GetAtt ALB.Outputs.LoadBalancerUrl

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/democracy-stack/aws/infrastructure/ecs-cluster.yml
      Parameters:
        EnvironmentName: !Ref Environment
        InstanceType: t2.large
        ClusterSize: '4'
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets

  GraphqlService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/democracy-stack/aws/services/graphql-service/main-stack.yml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: '2'
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /
        DBSubnetGroup: !GetAtt VPC.Outputs.DBSubnetGroup
        DBServerSecurityGroup: !GetAtt SecurityGroups.Outputs.DBServerSecurityGroup
        EnvironmentName: !Ref Environment

  # WebsiteService:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: https://s3.amazonaws.com/democracy-stack/aws/services/website-service/service.yml
  #     Parameters:
  #       VPC: !GetAtt VPC.Outputs.VPC
  #       Cluster: !GetAtt ECS.Outputs.Cluster
  #       DesiredCount: 2
  #       ProductServiceUrl:
  #         !Join ["/", [!GetAtt ALB.Outputs.LoadBalancerUrl, "products"]]
  #       Listener: !GetAtt ALB.Outputs.Listener
  #       Path: /
  #       ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole

  LifecycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/democracy-stack/aws/infrastructure/lifecyclehook.yml
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

Outputs:
  GraphqlServiceUrl:
    Description: The URL endpoint for the graphql service
    Value: !Join ["/", [!GetAtt ALB.Outputs.LoadBalancerUrl, "console"]]

  WebsiteServiceUrl:
    Description: The URL endpoint for the website service
    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, "/"]]