Description: Create a CodePipeline to include Nested CloudFormation, CodeBuild and Approval steps.

Parameters:

  ArtifactS3Bucket:
    Type: String
    Description: Name of the s3 which contains the CFN templates.
    Default: democracy-stack

  UATApprovalEmail:
    Type: String
    Description: Email for UAT notifications.
    Default: ryparker33@gmail.com

  ProdApprovalEmail:
    Type: String
    Description: Email for Prod notifications.
    Default: ryparker33@gmail.com

Resources:
  UATTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
        - Endpoint:
            Ref: UATApprovalEmail
          Protocol: "email"

  ProdTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
        - Endpoint:
            Ref: ProdApprovalEmail
          Protocol: "email"

  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodePipelineRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        -
          PolicyName: "CodePipelineNestedCFNAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "*"
                Resource:
                  - "*"

  CloudFormationRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CloudFormationRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        -
          PolicyName: "CloudFormationNestedCFNAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "*"
                Resource:
                  - "*"

  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: "CodeBuildNestedCFNAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "*"
                Resource:
                  - "*"

  BuildCopyCFNProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: BuildCopyCFN-${AWS::StackName}
      Description: Build to validate and copy CFN templates
      ServiceRole:
        Fn::GetAtt: [ CodeBuildRole, Arn ]
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:7.0.0
        EnvironmentVariables:
          - Name: TEMPLATE_BUCKET
            Value:
              Ref: ArtifactS3Bucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: infrastructure/aws/development/buildspec.yml
      TimeoutInMinutes: 15
      EncryptionKey:
        Fn::Sub: arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3
      Tags:
        - Key: Name
          Value:
            Fn::Sub: BuildCopyCFN-${AWS::StackName}

  DeployPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name:
        Fn::Sub: ContinuousDeliveryNestedCFN-${AWS::StackName}
      RoleArn:
          Fn::GetAtt: [ CodePipelineRole, Arn ]
      Stages:
        - Name: CFNSource
          Actions:
            - Name: CFNTemplateSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: CFNTemplateOutput
              RunOrder: 1
              Configuration:
                ConnectionArn:
                  Fn::Sub: "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/26fe5895-4c6e-4a24-aaec-8e21d5257bed"
                FullRepositoryId: "ryparker/democracy"
                BranchName: "main"
                OutputArtifactFormat: "CODE_ZIP"

        - Name: Validate
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: CFNTemplateOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: CFNTemplateArtifact
              Configuration:
                ProjectName:
                  Ref: BuildCopyCFNProject
              RunOrder: 1

            - Name: CreateTestCFNStack
              InputArtifacts:
                - Name: CFNTemplateArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                - Name: CreatedTestCFNStack
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn:
                  Fn::GetAtt: [ CloudFormationRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName:
                  Fn::Sub: Test-Democracy
                TemplateConfiguration: CFNTemplateArtifact::config-test.json
                TemplatePath: CFNTemplateArtifact::main-stack.yml
              RunOrder: 2

            - Name: DeleteTestStack
              InputArtifacts:
                - Name: CreatedTestCFNStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                - Name: ProceedToUAT
              Configuration:
                StackName:
                  Fn::Sub: Test-Democracy
                ActionMode: DELETE_ONLY
                RoleArn:
                  Fn::GetAtt: [ CloudFormationRole, Arn ]
              RunOrder: 4

        - Name: UAT
          Actions:
            - Name: CreateUATChangeSet
              InputArtifacts:
                - Name: CFNTemplateArtifact
                - Name: ProceedToUAT
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                - Name: CreatedUATChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: UATCBChangeSet
                RoleArn:
                  Fn::GetAtt: [ CloudFormationRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName:
                  Fn::Sub: UAT-Democracy
                TemplateConfiguration: CFNTemplateArtifact::config-uat.json
                TemplatePath: CFNTemplateArtifact::main-stack.yml
              RunOrder: 1

            - Name: ExecuteUATChangeSet
              InputArtifacts:
                - Name: CreatedUATChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                - Name: DeployedUAT
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: UATCBChangeSet
                StackName:
                  Fn::Sub: UAT-Democracy
              RunOrder: 2

            - Name: UATApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn:
                  Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${UATTopic}
                CustomData: Approve once UAT has been completed.
              RunOrder: 3

        - Name: Production
          Actions:
            - Name: CreateProdChangeSet
              InputArtifacts:
                - Name: CFNTemplateArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                - Name: CreatedProdChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: ProdCBChangeSet
                RoleArn:
                  Fn::GetAtt: [ CloudFormationRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName:
                  Fn::Sub: Prod-Democracy
                TemplateConfiguration: CFNTemplateArtifact::config-prod.json
                TemplatePath: CFNTemplateArtifact::main-stack.yml
              RunOrder: 1

            - Name: ProdApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn:
                  Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${ProdTopic}
                CustomData: Approve deployment in production.
              RunOrder: 2

            - Name: DeployProduction
              InputArtifacts:
                - Name: CreatedProdChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: ProdCBChangeSet
                StackName:
                  Fn::Sub: Prod-Democracy
              RunOrder: 3

      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactS3Bucket