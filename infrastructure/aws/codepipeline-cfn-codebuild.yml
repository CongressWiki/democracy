Description: Create a CodePipeline to include Nested CloudFormation, CodeBuild and Approval steps.

Parameters:
  CFNTemplateRepoName:
    Type: String
    Description: Name of the repo which contains CFN template.
  CFNTemplateRepoPath:
    Type: String
    Description: Path of the repo which contains CFN template.
  ValidateResourcesRepoName:
    Type: String
    Description: Name of the repo which contains test script to validate the resources.
  ValidateResourcesRepoPath:
    Type: String
    Description: Path of the repo which contains test script to validate the resources.
  UATTopic:
    Type: String
    Description: Name of the SNS topic in same region to send UAT approval notification.
  ProdTopic:
    Type: String
    Description: Name of the SNS topic in same region to send Production approval notification.
  ArtifactStoreS3Location:
    Type: String
    Description: Name of the S3 bucket to store CodePipeline artifact.

Resources:
  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - codepipeline.amazonaws.com
              - ec2.amazonaws.com
              - cloudformation.amazonaws.com
              - ecs.amazonaws.com
              - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: CodePipelineRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
              - cloudformation.amazonaws.com
              - ecs.amazonaws.com
              - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        -
          PolicyName: "CodeBuildDemocracyAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "cloudformation:Get*"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                Resource:
                  - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Test-${AWS::StackName}*
              -
                Effect: "Allow"
                Action:
                  - "codecommit:ListBranches"
                  - "codecommit:ListRepositories"
                  - "codecommit:BatchGetRepositories"
                  - "codecommit:Get*"
                  - "codecommit:GitPull"
                Resource:
                  - Fn::Sub: arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/26fe5895-4c6e-4a24-aaec-8e21d5257bed
              -
                Effect: "Allow"
                Action:
                  - "ec2:Describe*"
                  - "cloudformation:ValidateTemplate"
                  - "elasticloadbalancing:Describe*"
                  - "autoscaling:Describe*"
                  - "iam:Get*"
                  - "iam:List*"
                  - "logs:Describe*"
                  - "logs:Get*"
                  - "tag:Get*"
                Resource:
                  - "*"
              -
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              -
                Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                Resource:
                  - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}/*
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}

  BuildCopyCFNProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: BuildCopyCFN-${AWS::StackName}
      Description: Build to validate and copy CFN templates
      ServiceRole:
        Fn::GetAtt: [ CodeBuildRole, Arn ]
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:7.0.0
        EnvironmentVariables:
          - Name: TEMPLATE_BUCKET
            Value:
              Ref: ArtifactStoreS3Location
          - Name: TEMPLATE_PREFIX
            Value: codebuild
      Source:
        Type: CODEPIPELINE
        BuildSpec:
          Fn::Sub: ${CFNTemplateRepoPath}/buildspec.yml
      TimeoutInMinutes: 15
      EncryptionKey:
        Fn::Sub: arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3
      Tags:
        - Key: Name
          Value:
            Fn::Sub: BuildCopyCFN-${AWS::StackName}

  ValidateResourceProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: ValidateResource-${AWS::StackName}
      Description: Test build to validate the resources created by CFN templates
      ServiceRole:
        Fn::GetAtt: [ CodeBuildRole, Arn ]
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:2.7.12
      Source:
        Type: CODEPIPELINE
        BuildSpec:
          Fn::Sub: ${ValidateResourcesRepoPath}/buildspec.yml
      TimeoutInMinutes: 15
      EncryptionKey:
        Fn::Sub: arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ValidateResource-${AWS::StackName}

  DeployPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name:
        Fn::Sub: ContinuousDeliveryDemocracy-${AWS::StackName}
      RoleArn:
          Fn::GetAtt: [ CodePipelineRole, Arn ]
      Stages:
        -
          Name: CFNSource
          Actions:
            -
              Name: CFNTemplateSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: CFNTemplateOutput
              RunOrder: 1
              Configuration:
                ConnectionArn:
                  Fn::Sub: "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/26fe5895-4c6e-4a24-aaec-8e21d5257bed"
                FullRepositoryId: "ryparker/democracy"
                BranchName: "main"
                OutputArtifactFormat: "CODE_ZIP"
        -
          Name: Validate
          Actions:
            -
              Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: CFNTemplateOutput
              OutputArtifacts:
                - Name: CFNTemplateArtifact
              RunOrder: 1
              Configuration:
                ProjectName:
                  Ref: BuildCopyCFNProject
            -
              Name: CreateTestCFNStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: CFNTemplateArtifact
              OutputArtifacts:
                - Name: CreatedTestCFNStack
              RunOrder: 2
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn:
                  Fn::GetAtt: [ CloudFormationRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName:
                  Fn::Sub: Test-${AWS::StackName}
                TemplateConfiguration: CFNTemplateArtifact::config-test.json
                TemplatePath: CFNTemplateArtifact::main-stack.yml
            -
              Name: ValidateTestStack
              ActionTypeId:
                Category: Test
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: CFNTemplateOutput
              OutputArtifacts:
                - Name: ValidatedTestStack
              RunOrder: 3
              Configuration:
                ProjectName:
                  Ref: BuildCopyCFNProject
            -
              Name: DeleteTestStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: ValidatedTestStack
              OutputArtifacts:
                - Name: ProceedToUAT
              RunOrder: 4
              Configuration:
                StackName:
                  Fn::Sub: Test-${AWS::StackName}
                ActionMode: DELETE_ONLY
                RoleArn:
                  Fn::GetAtt: [ CloudFormationRole, Arn ]
        -
          Name: UAT
          Actions:
            -
              Name: CreateUATChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: CFNTemplateArtifact
                - Name: ProceedToUAT
              OutputArtifacts:
                - Name: CreatedUATChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: UATCBChangeSet
                RoleArn:
                  Fn::GetAtt: [ CloudFormationRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName:
                  Fn::Sub: UAT-${AWS::StackName}
                TemplateConfiguration: CFNTemplateArtifact::config-uat.json
                TemplatePath: CFNTemplateArtifact::main-stack.yml
              RunOrder: 1
            -
              Name: ExecuteUATChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: CreatedUATChangeSet
              OutputArtifacts:
                - Name: DeployedUAT
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: UATCBChangeSet
                StackName:
                  Fn::Sub: UAT-${AWS::StackName}
              RunOrder: 2
            -
              Name: UATApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn:
                  Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${UATTopic}
                CustomData: Approve once UAT has been completed.
              RunOrder: 3
        -
          Name: Production
          Actions:
            -
              Name: CreateProdChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: CFNTemplateArtifact
              OutputArtifacts:
                - Name: CreatedProdChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: ProdCBChangeSet
                RoleArn:
                  Fn::GetAtt: [ CloudFormationRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName:
                  Fn::Sub: Prod-${AWS::StackName}
                TemplateConfiguration: CFNTemplateArtifact::config-prod.json
                TemplatePath: CFNTemplateArtifact::main-stack.yml
              RunOrder: 1
            -
              Name: ProdApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn:
                  Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${ProdTopic}
                CustomData: Approve deployment in production.
              RunOrder: 2
            -
              Name: DeployProduction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: CreatedProdChangeSet
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: ProdCBChangeSet
                StackName:
                  Fn::Sub: Prod-${AWS::StackName}
              RunOrder: 3

      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreS3Location